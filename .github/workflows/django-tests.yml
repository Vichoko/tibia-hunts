name: Django Tests

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test:
    name: Django Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_tibia_hunts
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Run Django migrations check
        run: poetry run python src/manage.py makemigrations --check --dry-run
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_tibia_hunts

      - name: Run Django tests
        run: poetry run python src/manage.py test
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_tibia_hunts

      - name: Check for missing migrations
        run: poetry run python src/manage.py makemigrations --check
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_tibia_hunts
